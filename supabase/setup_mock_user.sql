-- Create mock user and disable RLS for no-auth setup

-- First, create the auth user
INSERT INTO auth.users (
  id,
  instance_id,
  email,
  encrypted_password,
  email_confirmed_at,
  invited_at,
  confirmation_token,
  confirmation_sent_at,
  recovery_token,
  recovery_sent_at,
  email_change_token_new,
  email_change,
  email_change_sent_at,
  last_sign_in_at,
  raw_app_meta_data,
  raw_user_meta_data,
  is_super_admin,
  created_at,
  updated_at,
  phone,
  phone_confirmed_at,
  phone_change,
  phone_change_token,
  phone_change_sent_at,
  email_change_token_current,
  email_change_confirm_status,
  banned_until,
  reauthentication_token,
  reauthentication_sent_at,
  is_sso_user,
  deleted_at
) VALUES (
  '00000000-0000-0000-0000-000000000000'::uuid,
  '00000000-0000-0000-0000-000000000000'::uuid,
  'mock@askcipher.local',
  '$2a$10$mockpasswordhashfortestingonly',
  now(),
  null,
  '',
  null,
  '',
  null,
  '',
  '',
  null,
  now(),
  '{"provider": "email", "providers": ["email"]}',
  '{}',
  false,
  now(),
  now(),
  null,
  null,
  '',
  '',
  null,
  '',
  0,
  null,
  '',
  null,
  false,
  null
) ON CONFLICT (id) DO NOTHING;

-- Create profile for mock user with all required fields
INSERT INTO profiles (
  id,
  user_id,
  username,
  display_name,
  bio,
  has_onboarded,
  image_url,
  image_path,
  profile_context,
  use_azure_openai,
  anthropic_api_key,
  azure_openai_35_turbo_id,
  azure_openai_45_turbo_id,
  azure_openai_45_vision_id,
  azure_openai_api_key,
  azure_openai_endpoint,
  azure_openai_embeddings_id,
  google_gemini_api_key,
  groq_api_key,
  mistral_api_key,
  openai_api_key,
  openai_organization_id,
  openrouter_api_key,
  perplexity_api_key,
  created_at,
  updated_at
) VALUES (
  '00000000-0000-0000-0000-000000000001'::uuid,
  '00000000-0000-0000-0000-000000000000'::uuid,
  'mock_user',
  'Mock User',
  'Mock user for testing',
  true,
  '',
  '',
  'You are a helpful AI assistant.',
  false,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  now(),
  now()
) ON CONFLICT (id) DO NOTHING;

-- Create default workspace (update existing one if it exists)
INSERT INTO workspaces (
  id,
  user_id,
  name,
  description,
  is_home,
  default_context_length,
  default_model,
  default_prompt,
  default_temperature,
  include_profile_context,
  include_workspace_instructions,
  instructions,
  sharing,
  embeddings_provider,
  image_path,
  created_at,
  updated_at
) VALUES (
  '00000000-0000-0000-0000-000000000002'::uuid,
  '00000000-0000-0000-0000-000000000000'::uuid,
  'Default Workspace',
  'Default workspace for AskCipher',
  true,
  4096,
  'gpt-3.5-turbo',
  'You are a helpful AI assistant.',
  0.5,
  true,
  true,
  'Be helpful and concise.',
  'private',
  'openai',
  '',
  now(),
  now()
) ON CONFLICT (id) DO UPDATE SET
  user_id = EXCLUDED.user_id,
  name = EXCLUDED.name,
  description = EXCLUDED.description,
  is_home = EXCLUDED.is_home;